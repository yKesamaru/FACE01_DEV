# -----------------------------------------------------------------
# サマリー:
# このDockerfileは、CUDA 11.0およびUbuntu 20.04をベースにしたface01_gpuイメージをビルドします。
# ユーザーの追加、必要なパッケージのインストール、環境設定を行い、Docker_INSTALL_FACE01.shスクリプトを実行してセットアップを行います。
# -----------------------------------------------------------------

# ベースイメージ: https://hub.docker.com/r/nvidia/cuda/tags
## ubuntu20.04: https://hub.docker.com/r/nvidia/cuda/tags?page=1&page_size=&name=ubuntu20.04&ordering=
## cuda11: https://hub.docker.com/r/nvidia/cuda/tags?page=&page_size=&ordering=&name=11
# FROM nvidia/cuda:11.0.3-base-ubuntu20.04
# 開発版。全てのパッケージを含む。: https://hub.docker.com/layers/nvidia/cuda/11.6.1-devel-ubuntu20.04/images/sha256-2732cd07ffb34d73621a12de8ecea08a1caa7b87d43ccbca34112de189824c20?context=explore
# 軽量なベースイメージを選択
FROM nvidia/cuda:11.6.1-runtime-ubuntu20.04

LABEL maintainer="y.kesamaru@tokai-kaoninsho.com"

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=ja_JP.UTF-8
ENV TZ=Asia/Tokyo

# deb http://archive.canonical.com/ubuntu focal partnerを有効化
RUN sed -i "s@# deb http://archive.canonical.com/ubuntu focal partner@deb http://archive.canonical.com/ubuntu focal partner@" /etc/apt/sources.list

# CUDA環境作成
RUN apt-get update
# すでに鍵はインストールされているので下記は不要
# RUN apt-get install -y wget
# RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
# RUN dpkg -i cuda-keyring_1.0-1_all.deb
# RUN apt-get update
# RUN apt-get install -y nvidia-cuda-toolkit
RUN apt-get install -y libcudnn8
RUN apt-get install -y libcudnn8-dev

# その他をインストール
RUN apt-get install -y wget
RUN apt-get install -y software-properties-common
RUN apt-get install -y apt-utils
RUN apt-get install -y sudo
RUN apt-get install -y supervisor
RUN apt-get install -y build-essential
RUN apt-get install -y cmake
RUN apt-get install -y ffmpeg
RUN apt-get install -y fonts-mplus
RUN apt-get install -y git
RUN apt-get install -y libavcodec-dev
RUN apt-get install -y libavformat-dev
RUN apt-get install -y libswscale-dev
RUN apt-get install -y libx11-dev
RUN apt-get install -y python3-dev
RUN apt-get install -y python3-tk
RUN apt-get install -y python3-pkg-resources
RUN apt-get install -y python3-venv
RUN apt-get install -y liblapack-dev
RUN apt-get install -y libopenblas-dev
RUN apt-get install -y language-pack-ja
RUN apt-get install -y fonts-noto-cjk
RUN apt-get install -y vim
RUN apt-get install -y libsm6
RUN apt-get install -y libxext6
RUN apt-get install -y libxrender-dev
RUN apt-get install -y gedit
RUN apt-get install -y firefox
RUN rm -rf /var/lib/apt/lists/*


# add user
ARG DOCKER_UID=1000
ARG DOCKER_USER=docker
ARG DOCKER_PASSWORD=docker

RUN useradd -m \
  --uid ${DOCKER_UID} --groups sudo,video --shell /bin/bash ${DOCKER_USER} \
  && echo ${DOCKER_USER}:${DOCKER_PASSWORD} | chpasswd

WORKDIR /home/${DOCKER_USER}
RUN chown -R ${DOCKER_USER} ./
USER ${DOCKER_USER}

# Install FACE01
RUN mkdir /home/${DOCKER_USER}/FACE01_DEV
WORKDIR /home/${DOCKER_USER}/FACE01_DEV/

COPY face01lib /home/${DOCKER_USER}/FACE01_DEV/face01lib
COPY output /home/${DOCKER_USER}/FACE01_DEV/output
COPY noFace /home/${DOCKER_USER}/FACE01_DEV/noFace
# COPY images /home/${DOCKER_USER}/FACE01_DEV/images
COPY pyproject.toml /home/${DOCKER_USER}/FACE01_DEV/
COPY requirements_dev.txt /home/${DOCKER_USER}/FACE01_DEV/
COPY config.ini /home/${DOCKER_USER}/FACE01_DEV/

## Folder newly prepared from v1.4.09
COPY docs /home/${DOCKER_USER}/FACE01_DEV/docs
COPY example /home/${DOCKER_USER}/FACE01_DEV/example
# COPY tests /home/${DOCKER_USER}/FACE01_DEV/tests
COPY assets /home/${DOCKER_USER}/FACE01_DEV/assets

## Folders and files obsolete from v1.4.09
# COPY FACE01.py /home/${DOCKER_USER}/FACE01_DEV/
# COPY CALL_FACE01.py /home/${DOCKER_USER}/FACE01_DEV/
# COPY *.mp4 /home/${DOCKER_USER}/FACE01_DEV/

# COPY dlib-19.24.tar.bz2 /home/${DOCKER_USER}/FACE01_DEV/
COPY SystemCheckLock /home/${DOCKER_USER}/FACE01_DEV/
RUN echo ${DOCKER_PASSWORD} | sudo -S chown -R ${DOCKER_USER} /home/${DOCKER_USER}/FACE01_DEV
COPY preset_face_images /home/${DOCKER_USER}/FACE01_DEV/preset_face_images

COPY docker/Docker_INSTALL_FACE01.sh /home/${DOCKER_USER}/FACE01_DEV/
WORKDIR /home/${DOCKER_USER}/FACE01_DEV
RUN echo ${DOCKER_PASSWORD} | sudo -S chown ${DOCKER_USER} /home/${DOCKER_USER}/FACE01_DEV/Docker_INSTALL_FACE01.sh \
    && chmod +x /home/${DOCKER_USER}/FACE01_DEV/Docker_INSTALL_FACE01.sh \
    && /bin/bash -c /home/${DOCKER_USER}/FACE01_DEV/Docker_INSTALL_FACE01.sh \

# `--clean` see bellow
# [Have you done sudo python3 setup.py install --clean yet?](https://github.com/davisking/dlib/issues/1686#issuecomment-471509357)